/*Copyright (c) 2017-2018 devuser1.com All Rights Reserved.
 This software is the confidential and proprietary information of devuser1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with devuser1.com*/
package com.hrdb.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.file.model.Downloadable;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.hrdb.models.query.TestqueryResponse;
import com.hrdb.service.HrdbQueryExecutorService;
import com.wordnik.swagger.annotations.ApiParam;

@RestController(value = "Hrdb.QueryExecutionController")
@RequestMapping("/hrdb/queryExecutor")
@Api(value = "QueryExecutionController", description = "controller class for query execution")
public class QueryExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(QueryExecutionController.class);

    @Autowired
    private HrdbQueryExecutorService queryService;

    @RequestMapping(value = "/queries/testquery", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "testquery")
    public Page<TestqueryResponse> executeTestquery(@RequestParam(value = "id", required = true) Integer id, Pageable pageable) {
        LOGGER.debug("Executing named query: testquery");
        Page<TestqueryResponse> _result = queryService.executeTestquery(id, pageable);
        LOGGER.debug("got the result for named query: testquery, result:{}", _result);
        return _result;
    }

    @ApiOperation(value = "Returns downloadable file for query testquery")
    @RequestMapping(value = "/queries/testquery/export/{exportType}", method = RequestMethod.GET, produces = "application/octet-stream")
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Downloadable exportTestquery(@PathVariable("exportType") ExportType exportType, @RequestParam(value = "id", required = true) Integer id, Pageable pageable) {
        LOGGER.debug("Exporting named query: testquery");
        return queryService.exportTestquery(exportType, id, pageable);
    }
}
