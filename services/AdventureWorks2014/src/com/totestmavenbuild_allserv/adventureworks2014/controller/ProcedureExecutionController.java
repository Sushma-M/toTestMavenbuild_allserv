/*Copyright (c) 2017-2018 devuser1.com All Rights Reserved.
 This software is the confidential and proprietary information of devuser1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with devuser1.com*/
package com.totestmavenbuild_allserv.adventureworks2014.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.totestmavenbuild_allserv.adventureworks2014.models.procedure.DeptdataResponse;
import com.totestmavenbuild_allserv.adventureworks2014.service.AdventureWorks2014ProcedureExecutorService;
import com.wordnik.swagger.annotations.ApiParam;

@RestController(value = "AdventureWorks2014.ProcedureExecutionController")
@RequestMapping("/AdventureWorks2014/procedureExecutor")
@Api(value = "ProcedureExecutionController", description = "controller class for procedure execution")
public class ProcedureExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(ProcedureExecutionController.class);

    @Autowired
    private AdventureWorks2014ProcedureExecutorService procedureService;

    @RequestMapping(value = "/procedure/execute/deptdata", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "dept data")
    public DeptdataResponse executeDeptdata(@RequestParam(value = "deptid", required = true) Integer deptid) {
        LOGGER.debug("Executing named procedure: deptdata");
        DeptdataResponse _result = procedureService.executeDeptdata(deptid);
        LOGGER.debug("got the result for named procedure: deptdata, result:{}", _result);
        return _result;
    }
}
